{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pedro\\\\Downloads\\\\Anderson\\\\Rocketseat\\\\OmniStack 8.0\\\\Projeto\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pedro\\\\Downloads\\\\Anderson\\\\Rocketseat\\\\OmniStack 8.0\\\\Projeto\\\\frontend\\\\src\\\\pages\\\\Login.js\";\nimport React, { useState } from 'react';\nimport './Login.css';\nimport api from '../services/api';\nimport logo from \"../assets/logo.svg\";\nexport default function Login({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  async function handleSubmit(e) {\n    //bloquear redirecionamento\n    e.preventDefault();\n    const response = await api.post('/devs', {\n      username //username: username\n      //como a variável username (corpo da requisição) tem o valor username. O nome do corpo da requisição é igual\n      //o nome da variável. Nesse caso pode usar a (short sintaxe do ES6).\n\n    });\n\n    if (response.data.name == null || response.data.bio == null) {\n      alert('Usuário inválido');\n    }\n\n    const _id = response.data._id;\n    history.push(\"/dev/\".concat(_id));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"login-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Tindev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Digite seu usu\\xE1rio no Github\",\n    value: username,\n    onChange: e => setUsername(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Enviar\")));\n} //Conceito dentro do react (Estado) - O estado de um componente é toda e qualquer informação que o componente\n//vai manipular. Que ele precisa modificar aquela informação, acessar aquela informação de alguma forma.\n//Para utilizar (estado) dentro do react, importa junto com o React o (useState)\n//Variável que vai ser manipulada por componente.\n//OnChange = Função do html padrão JavaScript, disparado automaticamente toda vez que houver uma alteração no input.\n//Quando pega essa função no html, não recebe exatamente o texto que digitou no input, recebe um evento.\n//Declara uma função dentro do onChange (e =>) o (e) significa que está recebendo o evento. Função que recebe o evento.\n//Função (handleSubmit) - função disparada quando o usuário der submit nesse form.\n//Dentro do form utiliza a função (onSubmit) e passa a função (handleSubmit) no formato JavaScript, dentro de chaves.\n//Essa função recebe um evento como parâmetro.\n//Por padrão qdo usuário da um submit ele redireciona o usuário pra outra página \n//(e.preventDefault) - vai prevenir o comportamento padrão do formulário que é de redirecionamento e\n//vai bloquear esse redirecionamento.\n//Propriedades - São atributos que são informados para cada tag html. Ex.: <img src={logo}.\n//Todos os componentes que são rotas, eles automaticamente herdam uma propriedade chamada (history) de dentro do react-router-dom\n//Com a propriedade (history) serve para fazer a navegação (history.push('/main')).\n//Pasta services - Armazena qualquer tipo de serviço que vai fazer comunicação com algum meio de informações esternas. Prestador de dados esterno. Configuração da API","map":{"version":3,"sources":["C:\\Users\\Pedro\\Downloads\\Anderson\\Rocketseat\\OmniStack 8.0\\Projeto\\frontend\\src\\pages\\Login.js"],"names":["React","useState","api","Login","history","username","setUsername","handleSubmit","e","preventDefault","response","post","data","name","bio","alert","_id","push","logo","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAGA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AAAA,oBACPH,QAAQ,CAAC,EAAD,CADD;AAAA;AAAA,QAChCI,QADgC;AAAA,QACtBC,WADsB;;AAGvC,iBAAeC,YAAf,CAA4BC,CAA5B,EAA+B;AAC3B;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,QAAQ,GAAG,MAAMR,GAAG,CAACS,IAAJ,CAAS,OAAT,EAAkB;AACrCN,MAAAA,QADqC,CAErC;AACA;AACA;;AAJqC,KAAlB,CAAvB;;AAOA,QAAIK,QAAQ,CAACE,IAAT,CAAcC,IAAd,IAAsB,IAAtB,IAA8BH,QAAQ,CAACE,IAAT,CAAcE,GAAd,IAAqB,IAAvD,EAA6D;AACzDC,MAAAA,KAAK,CAAC,kBAAD,CAAL;AACH;;AAb0B,UAenBC,GAfmB,GAeXN,QAAQ,CAACE,IAfE,CAenBI,GAfmB;AAiB3BZ,IAAAA,OAAO,CAACa,IAAR,gBAAqBD,GAArB;AACH;;AAED,SACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEW,IAAV;AAAgB,IAAA,GAAG,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AACI,IAAA,WAAW,EAAC,iCADhB;AAEI,IAAA,KAAK,EAAEb,QAFX;AAGI,IAAA,QAAQ,EAAEG,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACW,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAOI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,CADJ,CADJ;AAaH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from 'react';\r\nimport './Login.css';\r\nimport api from '../services/api';\r\nimport logo from '../assets/logo.svg';\r\n\r\nexport default function Login({ history }) {\r\n    const [username, setUsername] = useState('');\r\n\r\n    async function handleSubmit(e) {\r\n        //bloquear redirecionamento\r\n        e.preventDefault();\r\n\r\n        const response = await api.post('/devs', {\r\n            username,\r\n            //username: username\r\n            //como a variável username (corpo da requisição) tem o valor username. O nome do corpo da requisição é igual\r\n            //o nome da variável. Nesse caso pode usar a (short sintaxe do ES6).\r\n        });\r\n\r\n        if (response.data.name == null || response.data.bio == null) {\r\n            alert('Usuário inválido');\r\n        }\r\n\r\n        const { _id } = response.data;\r\n\r\n        history.push(`/dev/${_id}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <form onSubmit={handleSubmit}>\r\n                <img src={logo} alt=\"Tindev\" />\r\n                <input\r\n                    placeholder=\"Digite seu usuário no Github\"\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Enviar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\n//Conceito dentro do react (Estado) - O estado de um componente é toda e qualquer informação que o componente\r\n//vai manipular. Que ele precisa modificar aquela informação, acessar aquela informação de alguma forma.\r\n//Para utilizar (estado) dentro do react, importa junto com o React o (useState)\r\n//Variável que vai ser manipulada por componente.\r\n//OnChange = Função do html padrão JavaScript, disparado automaticamente toda vez que houver uma alteração no input.\r\n//Quando pega essa função no html, não recebe exatamente o texto que digitou no input, recebe um evento.\r\n//Declara uma função dentro do onChange (e =>) o (e) significa que está recebendo o evento. Função que recebe o evento.\r\n//Função (handleSubmit) - função disparada quando o usuário der submit nesse form.\r\n//Dentro do form utiliza a função (onSubmit) e passa a função (handleSubmit) no formato JavaScript, dentro de chaves.\r\n//Essa função recebe um evento como parâmetro.\r\n//Por padrão qdo usuário da um submit ele redireciona o usuário pra outra página \r\n//(e.preventDefault) - vai prevenir o comportamento padrão do formulário que é de redirecionamento e\r\n//vai bloquear esse redirecionamento.\r\n//Propriedades - São atributos que são informados para cada tag html. Ex.: <img src={logo}.\r\n//Todos os componentes que são rotas, eles automaticamente herdam uma propriedade chamada (history) de dentro do react-router-dom\r\n//Com a propriedade (history) serve para fazer a navegação (history.push('/main')).\r\n//Pasta services - Armazena qualquer tipo de serviço que vai fazer comunicação com algum meio de informações esternas. Prestador de dados esterno. Configuração da API\r\n\r\n"]},"metadata":{},"sourceType":"module"}